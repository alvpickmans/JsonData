<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="JsonDataUI.JsonObject.JsonOptions.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="JsonDataUI.JsonObject.JsonOptions.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAsQAAALEAVuRnQsAAAHDSURBVFhH7VY7TsNAEM1RcgEkjuADUKTgAO5pXFO5ofYR
        IloKAgkgROMiUqIUKBJCCCGExQl8hPBe9NYZnDisk/AR8pNesbMzb8Yza3tbDRr8aQz6/QCMwbZM3mCM
        YgOZ/IGgEMzBmVhbhDEmnlqhttajFJiB23aAGk7vax04JXLOZNoa1JJmLFM14JR6O3uCWtJMZaoGneRc
        FDAejVLDsLSupML/RwGBYbu0rqTCd1LAzDAurSupcP8C4BDJkSyeAGL2yTbpgH21I5kXgNFVSC59NCBm
        Z2vPQAeMwsFzuHf2PgN7XMveVfgc0OTD2Y/b4i3jwmx4FXCa3sdImINTMFMBZArmwfnbIgGgHKsLcIDR
        ewTHt4+BSUraIsiiA9QyussjsICDzyGcntw9RC4ZRpDA1rsaTtgVdoT2ROG2w7t5DQ8uXjsuOci577v9
        w8sX25ke46klzY0L+HQG0H536MgubOR8v7T3PQWA3aPrp6ILbgQ3w0mC9e5HsApI0FYix3WHsFYB7nc8
        lWklkIAFVL6GYHHaoVXrd1z7QoJkbhzzmROMUay9kPjdrOD4e1cyC4nw47TplYyxtYtv0OAH0Wp9AIt3
        1jsmIANiAAAAAElFTkSuQmCC
</value>
  </data>
</root>